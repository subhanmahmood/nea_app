{
  "_args": [
    [
      {
        "raw": "react-masonry-component@^6.0.2",
        "scope": null,
        "escapedName": "react-masonry-component",
        "name": "react-masonry-component",
        "rawSpec": "^6.0.2",
        "spec": ">=6.0.2 <7.0.0",
        "type": "range"
      },
      "D:\\College\\Computer Science\\Coursework\\ta-home-improvements"
    ]
  ],
  "_from": "react-masonry-component@>=6.0.2 <7.0.0",
  "_id": "react-masonry-component@6.0.2",
  "_inCache": true,
  "_location": "/react-masonry-component",
  "_nodeVersion": "8.8.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-masonry-component-6.0.2.tgz_1513292436663_0.6248530172742903"
  },
  "_npmUser": {
    "name": "afram",
    "email": "marwan.butrous@protonmail.com"
  },
  "_npmVersion": "5.4.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-masonry-component@^6.0.2",
    "scope": null,
    "escapedName": "react-masonry-component",
    "name": "react-masonry-component",
    "rawSpec": "^6.0.2",
    "spec": ">=6.0.2 <7.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-masonry-component/-/react-masonry-component-6.0.2.tgz",
  "_shasum": "6c768652be34602f2dd0d162c8f6266b09d9e272",
  "_shrinkwrap": null,
  "_spec": "react-masonry-component@^6.0.2",
  "_where": "D:\\College\\Computer Science\\Coursework\\ta-home-improvements",
  "author": {
    "name": "Eirik Vullum",
    "email": "evullum@gmail.com",
    "url": "http://www.evconsult.no/"
  },
  "bugs": {
    "url": "https://github.com/eiriklv/react-masonry-component/issues"
  },
  "contributors": [
    {
      "name": "Marwan Butrous",
      "email": "marwan.butrous@protonmail.ch"
    }
  ],
  "dependencies": {
    "create-react-class": "^15.6.2",
    "element-resize-detector": "^1.1.9",
    "imagesloaded": "^4.0.0",
    "lodash": "^4.17.4",
    "masonry-layout": "^4.2.0",
    "prop-types": "^15.5.8"
  },
  "description": "A masonry component for React.js",
  "devDependencies": {
    "babel-core": "^6.3.26",
    "babel-loader": "^6.2.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-es2015": "^6.3.13",
    "babel-preset-react": "^6.3.13",
    "eslint": "^3.13.0",
    "expect": "^1.13.4",
    "function-bind": "^1.0.2",
    "imports-loader": "^0.6.5",
    "karma": "^1.3.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-cli": "^0.1.2",
    "karma-mocha": "^0.2.1",
    "karma-phantomjs-launcher": "^1.0.2",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^1.8.1",
    "mocha": "^2.3.4",
    "phantomjs-prebuilt": "^2.1.15",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "webpack": "^1.12.9"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-qPlgalFGvAoTKhcp57DiLIGtcdD96KR0NCw36ExH+VeyzGDbSrWNDh+UeXAVG25zR3MQGKbLONA/ZAwf1CBKvg==",
    "shasum": "6c768652be34602f2dd0d162c8f6266b09d9e272",
    "tarball": "https://registry.npmjs.org/react-masonry-component/-/react-masonry-component-6.0.2.tgz"
  },
  "gitHead": "39ef1b7548084fc23cca2cc1a8986e303180be44",
  "homepage": "https://github.com/eiriklv/react-masonry-component",
  "keywords": [
    "react",
    "mixin",
    "masonry",
    "packery",
    "isotope",
    "react-component"
  ],
  "license": "MIT",
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "afram",
      "email": "marwan.butrous@protonmail.com"
    },
    {
      "name": "eiriklv",
      "email": "evullum@gmail.com"
    }
  ],
  "name": "react-masonry-component",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0-0 || ^16.0.0-0"
  },
  "readme": "React Masonry Component\n=======================\n\n[![npm version](https://badge.fury.io/js/react-masonry-component.svg)](http://badge.fury.io/js/react-masonry-component)\n[![Build Status](https://travis-ci.org/eiriklv/react-masonry-component.svg?branch=master)](https://travis-ci.org/eiriklv/react-masonry-component)\n\n### IE8 support\nif you wish to have IE8 support, v2 with React 0.14 is the highest version available.\n\n### Table of contents\n1. [Usage](#usage)\n  1. [Basic usage](#basic-usage)\n  2. [Custom props](#custom-props)\n  3. [Accessing Masonry instance](#accessing-masonry-instance)\n  4. [Events](#events)\n3. [Using with Webpack](#using-with-webpack)\n  1. [Dependencies](#dependencies)\n  2. [Webpack config \\[DEPRECATED\\]](#webpack-config)\n\n#### Introduction:\nA React.js Masonry component. (Also available as a [mixin](https://github.com/eiriklv/react-masonry-mixin) if needed)\n\n#### Live demo:\n[hearsay.me](http://hearsay-frontend.herokuapp.com)\n\n#### Usage:\n\n* The component is bundled with Masonry, so no additional dependencies needed!\n* You can optionally include Masonry as a script tag if there should be any reason for doing so\n`<script src='//cdnjs.cloudflare.com/ajax/libs/masonry/3.1.5/masonry.pkgd.min.js' />`\n\n* To use the component just require the module.\n\n##### Basic usage\n``` npm install --save react-masonry-component```\n```js\nvar React = require('react');\nvar Masonry = require('react-masonry-component');\n\nvar masonryOptions = {\n    transitionDuration: 0\n};\n\nvar Gallery = React.createClass({\n    render: function () {\n        var childElements = this.props.elements.map(function(element){\n           return (\n                <li className=\"image-element-class\">\n                    <img src={element.src} />\n                </li>\n            );\n        });\n\n        return (\n            <Masonry\n                className={'my-gallery-class'} // default ''\n                elementType={'ul'} // default 'div'\n                options={masonryOptions} // default {}\n                disableImagesLoaded={false} // default false\n                updateOnEachImageLoad={false} // default false and works only if disableImagesLoaded is false\n            >\n                {childElements}\n            </Masonry>\n        );\n    }\n});\n\nmodule.exports = Gallery;\n```\n\nES6-style modules are also supported, just use:\n\n```js\nimport Masonry from 'react-masonry-component';\n```\n\n##### Custom props\nYou can also include your own custom props - EG: inline-style and event handlers.\n\n```js\nvar React = require('react');\nvar Masonry = require('react-masonry-component');\n\nvar masonryOptions = {\n    transitionDuration: 0\n};\n\nvar style = {\n    backgroundColor: 'tomato'\n};\n\nvar Gallery = React.createClass({\n    handleClick: function() { },\n\n    render: function () {\n        return (\n            <Masonry\n                className={'my-gallery-class'}\n                style={style}\n                onClick={this.handleClick}\n            >\n                {...}\n            </Masonry>\n        );\n    }\n});\n\nmodule.exports = Gallery;\n```\n\n##### Accessing Masonry instance\nShould you need to access the instance of Masonry (for example to listen to masonry events)\nyou can do so by using `refs`.\n\n ```js\n var React = require('react');\n var Masonry = require('react-masonry-component');\n\n\n var Gallery = React.createClass({\n    handleLayoutComplete: function() { },\n\n    componentDidMount: function() {\n        this.masonry.on('layoutComplete', this.handleLayoutComplete);\n    },\n\n    componentWillUnmount: function() {\n        this.masonry.off('layoutComplete', this.handleLayoutComplete);\n    },\n\n     render: function () {\n         return (\n             <Masonry\n                 ref={function(c) {this.masonry = this.masonry || c.masonry;}.bind(this)}\n             >\n                 {...}\n             </Masonry>\n         );\n     }\n });\n\n module.exports = Gallery;\n ```\n\n##### Events\n\n- `onImagesLoaded` - triggered when all images are loaded or after each image is loaded when `updateOnEachImageLoad` is set to `true`\n- `onLayoutComplete` - triggered after a layout and all positioning transitions have completed.\n- `onRemoveComplete` - triggered after an item element has been removed\n\n```jsx\nvar Gallery = React.createClass({\n    componentDidMount: function() {\n        this.hide();\n    },\n    handleImagesLoaded: function(imagesLoadedInstance) {\n        this.show();\n    },\n    render: function(){\n        return (\n            <Masonry\n                onImagesLoaded={this.handleImagesLoaded}\n                onLayoutComplete={laidOutItems => this.handleLayoutComplete(laidOutItems)}\n                onRemoveComplete={removedItems => this.handleRemoveComplete(removedItems)}\n            >\n                {...}\n            </Masonry>\n        )\n    }\n});\n```\n\n#### Using with Webpack [Deprecated: this hack is no longer needed with masonry-layout 4.x]\nBecause webpack resolves AMD first, you need to use the imports-loader in order to disable AMD\nand require as commonJS modules.\n\n##### Dependencies\nFirst ensure you have the imports-loader installed\n```sh\nnpm install imports-loader --save\n```\n\n##### Webpack config\nThen add the rules for the imports-loader to your webpack config.\nThe `babel-loader` is used below to show how you can use the 2 together.\n```js\nloaders: [\n    {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        loader: 'babel'\n    },\n    {\n        test: /masonry|imagesloaded|fizzy\\-ui\\-utils|desandro\\-|outlayer|get\\-size|doc\\-ready|eventie|eventemitter/,\n        loader: 'imports?define=>false&this=>window'\n    }\n]\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/eiriklv/react-masonry-component.git"
  },
  "scripts": {
    "dev": "karma start spec/setup/karma.conf.js --no-single-run",
    "lint": "eslint lib/index.js",
    "test": "npm run lint && karma start spec/setup/karma.conf.js"
  },
  "typings": "typings.d.ts",
  "version": "6.0.2"
}
