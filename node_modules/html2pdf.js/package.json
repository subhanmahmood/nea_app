{
  "_args": [
    [
      {
        "raw": "html2pdf.js",
        "scope": null,
        "escapedName": "html2pdf.js",
        "name": "html2pdf.js",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\College\\Computer Science\\Coursework\\ta-home-improvements"
    ]
  ],
  "_from": "html2pdf.js@latest",
  "_id": "html2pdf.js@0.8.2",
  "_inCache": true,
  "_location": "/html2pdf.js",
  "_nodeVersion": "9.2.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/html2pdf.js-0.8.2.tgz_1513688263484_0.6021147596184164"
  },
  "_npmUser": {
    "name": "ekoopmans",
    "email": "erik@erik-koopmans.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "html2pdf.js",
    "scope": null,
    "escapedName": "html2pdf.js",
    "name": "html2pdf.js",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/html2pdf.js/-/html2pdf.js-0.8.2.tgz",
  "_shasum": "fcea973fec01c2f7d726d88c8424805e831bbef7",
  "_shrinkwrap": null,
  "_spec": "html2pdf.js",
  "_where": "D:\\College\\Computer Science\\Coursework\\ta-home-improvements",
  "author": {
    "name": "Erik Koopmans",
    "email": "erik@erik-koopmans.com",
    "url": "https://www.erik-koopmans.com"
  },
  "browser": "dist/html2pdf.js",
  "bugs": {
    "url": "https://github.com/eKoopmans/html2pdf/issues"
  },
  "dependencies": {
    "es6-promise": "^4.1.1",
    "html2canvas": "https://github.com/eKoopmans/html2canvas/tarball/develop",
    "jspdf": "^1.3.5"
  },
  "description": "Client-side HTML-to-PDF rendering using pure JS",
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-preset-env": "^1.6.1",
    "gulp": "^3.9.1",
    "rimraf": "^2.6.2",
    "rollup": "^0.51.8",
    "rollup-plugin-babel": "^3.0.2",
    "rollup-plugin-commonjs": "^8.2.6",
    "rollup-plugin-node-resolve": "^3.0.0",
    "rollup-plugin-uglify": "^2.0.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-W7Pcv6EA5z9fh6muz3/BkHmmXIuNRwWPSlYTkNDfWJWB4mn36P6DQ18o1JCYM/j3khs9SqAl5eA7r6KFX84xHw==",
    "shasum": "fcea973fec01c2f7d726d88c8424805e831bbef7",
    "tarball": "https://registry.npmjs.org/html2pdf.js/-/html2pdf.js-0.8.2.tgz"
  },
  "gitHead": "8226c17f662aaa695bebcf07420716a195a841c8",
  "homepage": "https://github.com/eKoopmans/html2pdf",
  "keywords": [
    "javascript",
    "pdf-generation",
    "html",
    "client-side",
    "canvas"
  ],
  "license": "MIT",
  "main": "dist/require/html2pdf.cjs.js",
  "maintainers": [
    {
      "name": "ekoopmans",
      "email": "erik@erik-koopmans.com"
    }
  ],
  "module": "dist/include/html2pdf.es.js",
  "name": "html2pdf.js",
  "optionalDependencies": {},
  "readme": "# html2pdf\n\nhtml2pdf converts any webpage or element into a printable PDF entirely client-side using [html2canvas](https://github.com/niklasvh/html2canvas) and [jsPDF](https://github.com/MrRio/jsPDF).\n\n## Getting started\n\n#### HTML\n\nThe simplest way to use html2pdf is to download `dist/html2pdf.bundle.min.js` to your project folder and include it in your HTML with:\n\n```html\n<script src=\"html2pdf.bundle.min.js\"></script>\n```\n\n*Note: [Click here](#dependencies) for more information about using the unbundled version `dist/html2canvas.min.js`.*\n\n#### NPM\n\nInstall html2pdf and its dependencies using NPM with `npm install --save html2pdf.js` (make sure to include `.js` in the package name).\n\n*Note: You can use NPM to create your project, but html2pdf **will not run in Node.js**, it must be run in a browser.*\n\n#### Bower\n\nInstall html2pdf and its dependencies using Bower with `bower install --save html2pdf.js` (make sure to include `.js` in the package name).\n\n## Usage\n\nOnce installed, html2pdf is ready to use. The following command will generate a PDF of `#element-to-print` and prompt the user to save the result:\n\n```js\nvar element = document.getElementById('element-to-print');\nhtml2pdf(element);\n```\n\n## Options\n\nhtml2pdf can be configured using an optional `opt` parameter:\n\n```js\nvar element = document.getElementById('element-to-print');\nhtml2pdf(element, {\n  margin:       1,\n  filename:     'myfile.pdf',\n  image:        { type: 'jpeg', quality: 0.98 },\n  html2canvas:  { dpi: 192, letterRendering: true },\n  jsPDF:        { unit: 'in', format: 'letter', orientation: 'portrait' }\n});\n```\n\nThe `opt` parameter has the following optional fields:\n\n|Name        |Type            |Default                       |Description                                                                                                 |\n|------------|----------------|------------------------------|------------------------------------------------------------------------------------------------------------|\n|margin      |number or array |0                             |PDF margin (in jsPDF units). Can be a single number, `[vMargin, hMargin]`, or `[top, left, bottom, right]`. |\n|filename    |string          |'file.pdf'                    |The default filename of the exported PDF.                                                                   |\n|image       |object          |{type: 'jpeg', quality: 0.95} |The image type and quality used to generate the PDF. See the Extra Features section below.                  |\n|enableLinks |boolean         |true                          |If enabled, PDF hyperlinks are automatically added ontop of all anchor tags.                                |\n|html2canvas |object          |{ }                           |Configuration options sent directly to `html2canvas` ([see here](https://html2canvas.hertzen.com/documentation.html#available-options) for usage).|\n|jsPDF       |object          |{ }                           |Configuration options sent directly to `jsPDF` ([see here](http://rawgit.com/MrRio/jsPDF/master/docs/jsPDF.html) for usage).|\n\n### Page-breaks\n\nYou may add `html2pdf`-specific page-breaks to your document by adding the CSS class `html2pdf__page-break` to any element (normally an empty `div`). For React elements, use `className=html2pdf__page-break`. During PDF creation, these elements will be given a height calculated to fill the remainder of the PDF page that they are on. Example usage:\n\n```html\n<div id=\"element-to-print\">\n  <span>I'm on page 1!</span>\n  <div class=\"html2pdf__page-break\"></div>\n  <span>I'm on page 2!</span>\n</div>\n```\n\n### Image type and quality\n\nYou may customize the image type and quality exported from the canvas by setting the `image` option. This must be an object with the following fields:\n\n|Name        |Type            |Default                       |Description                                                                                  |\n|------------|----------------|------------------------------|---------------------------------------------------------------------------------------------|\n|type        |string          |'jpeg'                        |The image type. HTMLCanvasElement only supports 'png', 'jpeg', and 'webp' (on Chrome).       |\n|quality     |number          |0.95                          |The image quality, from 0 to 1. This setting is only used for jpeg/webp (not png).           |\n\nThese options are limited to the available settings for [HTMLCanvasElement.toDataURL()](https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toDataURL), which ignores quality settings for 'png' images. To enable png image compression, try using the [canvas-png-compression shim](https://github.com/ShyykoSerhiy/canvas-png-compression), which should be an in-place solution to enable png compression via the `quality` option.\n\n## Dependencies\n\nhtml2pdf depends on the external packages [html2canvas](https://github.com/niklasvh/html2canvas), [jsPDF](https://github.com/MrRio/jsPDF), and [es6-promise](https://github.com/stefanpenner/es6-promise). These dependencies are automatically loaded when using NPM or the bundled package.\n\nIf using the unbundled `dist/html2pdf.min.js` (or its un-minified version), you must also include each dependency. Order is important, otherwise html2canvas will be overridden by jsPDF's own internal implementation:\n\n```html\n<script src=\"es6-promise.auto.min.js\"></script>\n<script src=\"jspdf.min.js\"></script>\n<script src=\"html2canvas.min.js\"></script>\n<script src=\"html2pdf.min.js\"></script>\n```\n\nhtml2pdf currently uses [this fork](https://github.com/eKoopmans/html2canvas/tree/develop) of html2canvas to resolve a few bugs and add support for box-shadows and custom resolutions (via the `dpi`/`scale` options).\n\n## Contributing\n\n### Issues\n\nWhen submitting an issue, please provide reproducible code that highlights the issue, preferably by creating a fork of [this template jsFiddle](https://jsfiddle.net/u6o6ne41/) (which has html2pdf already loaded). Remember that html2pdf uses [html2canvas](https://github.com/niklasvh/html2canvas) and [jsPDF](https://github.com/MrRio/jsPDF) as dependencies, so it's a good idea to check each of those repositories' issue trackers to see if your problem has already been addressed.\n\n### Pull requests\n\nIf you want to create a new feature or bugfix, please feel free to fork and submit a pull request! Use the [`develop`](/eKoopmans/html2pdf/tree/develop) branch, which features the latest development, and make changes to `/src/` rather than directly to `/dist/`. You can test your changes by rebuilding with `npm run build`.\n\n## Credits\n\n[Erik Koopmans](https://github.com/eKoopmans)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2017 Erik Koopmans <[http://www.erik-koopmans.com/](http://www.erik-koopmans.com/)>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eKoopmans/html2pdf.git"
  },
  "scripts": {
    "build": "rollup -c",
    "clean": "rimraf dist",
    "prebuild": "npm install && npm run clean",
    "publish": "npm publish",
    "release": "gulp release --tagmessage",
    "stage-release": "gulp stage-release --newversion",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.8.2"
}
