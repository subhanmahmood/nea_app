import React from 'react';
import styles from './styles';

class Typeahead extends React.Component {
  constructor( ) {
    super( )
    this.state = {
      data: [],
      inputData: [],
      activeInputItem: 0
    }
  }
  componentDidMount(){
    const data = this.props.data
    this.setState({data:data})
  }
  updateInputValues( value ) {
    let updatedInputValues = Object.assign( [], this.state.inputData )
    updatedInputValues = value
    this.setState({ inputData: updatedInputValues })
  }
  sortHandler( data ) {
    for ( let j = 0; j < data.length + 1; j++ ) {

      for ( let i = 1; i < data.length; i++ ) {

        let currentItem = data[i - 1]
        let nextItem = data[i]

        if (currentItem.toLowerCase( ) > nextItem.toLowerCase( )) {
          data[i - 1] = nextItem
          data[i] = currentItem
          console.log( "swap" )
        }
      }
    }
    return data
  }
  handler( event ) {
    const value = event.target.value
    const userLength = value.length
    let inputValues = [ ]
    if ( value !== '' ) {
      this.state.data.forEach(( item ) => {
        let substring = item.substring( 0, userLength )
        if (value.toLowerCase( ) == substring.toLowerCase( )) {
          inputValues.push( item )
        }
      })
      inputValues = this.sortHandler( inputValues )
      this.updateInputValues( inputValues )
    } else if ( value === '' ) {
      this.updateInputValues([ ])
    }
  }
  onBlur( ) {
    this.setState({ inputData: [], activeInputItem: 0 })
  }
  keyPress( event ) {
    let key = event.which;
    let listLength = this.state.inputData.length
    switch ( key ) {
      case 13:

        let activeValue = document.getElementById( 'active-suggestion' ).innerHTML;
        console.log( activeValue );
        document.getElementById( this.props.id ).value = activeValue
        this.setState({ inputData: [], activeInputItem: 0 })
        break;

      case 38:
        // Key up.
        if ( this.state.activeInputItem - 1 < 0 ) {} else {
          let value = this.state.activeInputItem - 1
          this.setState({ activeInputItem: value });
        }
        break;
      case 40:
        // Key down.
        if ( this.state.activeInputItem + 1 > listLength - 1 ) {} else {
          let activeInputItem = this.state.activeInputItem + 1
          this.setState({ activeInputItem: activeInputItem });
        }
        break;
    }
  }
  render( ) {
    const inputItems = this.state.inputData.map(( item, i ) => {
      let activeInputItem = this.state.activeInputItem
      if ( activeInputItem == i ) {
        return (
          <li id="active-suggestion" key={i} style={styles.listItem} className="bg-primary text-light">{item}</li>
        )
      } else {
        return (
          <li key={i} style={styles.listItem}>{item}</li>
        )
      }

    })
    return (
      <div style={styles.container}>
        <input type="text" style={styles.input} id={this.props.id} className="form-control" placeholder={this.props.placeholder} onChange={this.handler.bind( this )} onKeyDown={this.keyPress.bind( this )} onBlur={this.onBlur.bind( this )}/>
        <div style={styles.dropdownContainer}>
          <ul style={styles.listContainer}>{inputItems}</ul>
        </div>
      </div>
    )
  }
}

export default Typeahead;
